#summary JavaStruct example , Photoshop color book file reader - writer.
#labels Featured,Phase-Implementation

= How to use JavaStruct to read and write Adobe Photoshop Color book files = 

JavaStruct is also ideal for reading and writing special binary file formats. In this example we will write a Photoshop Color book file reader-writer. The details of the format can be found [http://magnetiq.com/docs/PhotoshopColorBook.txt here]. 

= Header =
In the header, we have special string fields. 
{{{
  +--------+-----------------------//----------------------------------------+
  | Length | UTF-16 Characters     \\                                        |
  +--------+-----------------------//----------------------------------------+
}}}

So first we have to represent these strings as a special Struct class, AStruct. We use special *ArrayLengthMarker* annotation.
{{{
@StructClass
public class AString {
	
	@StructField (order = 0 )
	@ArrayLengthMarker (fieldName = "chars")
	public int length;
	
	@StructField (order = 1)
	public char[] chars;
	
	public AString(String content){
		this.length = content.length();
		this.chars = content.toCharArray();
	}
...
}
}}}

Here is the actual header.

{{{
@StructClass
public class ACBHeader {
	
	public static final short RGB  = 0;
	public static final short CMYK = 2;	
	public static final short LAB  = 7;
	
	// Signature is always ASCII characters "8BCB"
	@StructField (order = 0)
	public byte[] signature = {'8', 'B', 'C', 'B'};
	
	//Photoshop 7 only opens files with a version of 1 (0x0001) 
	@StructField (order = 1)
	public short fileVersion;
	
	// Unique identifier..
	@StructField (order = 2)
	public short colorBookIdentifier;
	
	@StructField (order = 3)
	public AString title;
	
	@StructField (order = 4)
	public AString colorNamePrefix;
	
	@StructField (order = 5)
	public AString colorNamePostfix;

	// Generally a copyright notice
	@StructField (order = 6)
	public AString description;
	
	@StructField (order = 7)
	public short colorCount; 

	// Photoshop displays colors page by page. This field specifies the
	// maximum number of colors that can appear on a page.
	@StructField (order = 8)
	public short colorsPerPage; 

	@StructField (order = 9)
	public short pageSelectorOffset;
        
        // RGB, CMYK or Lab	
	@StructField (order = 10)
	public short ColorSpaceID;
...

}}}
